#
# OpenSSL example configuration file.
# This is mostly being used for generation of certificate requests.
#

# This definition stops the following lines choking if HOME isn't
# defined.
HOME			= .
RANDFILE		= $ENV::HOME/.rnd

# Extra OBJECT IDENTIFIER info:
#oid_file		= $ENV::HOME/.oid
oid_section		= new_oids

# To use this configuration file with the "-extfile" option of the
# "openssl x509" utility, name here the section containing the
# X.509v3 extensions to use:
# extensions		= 
# (Alternatively, use a configuration file that has only
# X.509v3 extensions in its main [= default] section.)

[ new_oids ]

# We can add new OIDs in here for use by 'ca', 'req' and 'ts'.
# Add a simple OID like this:
# testoid1=1.2.3.4
# Or use config file substitution like this:
# testoid2=${testoid1}.5.6

# Policies used by the TSA examples.
tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ ca ]
default_ca	= {{ ca_default_ca }}		# The default ca section

####################################################################
[ CA_default ]

dir		= {{ ca_default_dir }}		# Where everything is kept
certs		= {{ ca_default_certs }}		# Where the issued certs are kept
crl_dir		= {{ ca_default_crl_dir }}		# Where the issued crl are kept
database	= {{ ca_default_db }}	# database index file.
new_certs_dir	= {{ ca_default_new_certs_dir }}		# default place for new certs.

certificate	= {{ ca_default_certificate }}	# The CA certificate
serial		= {{ ca_default_serial }} 		# The current serial number
crlnumber	= {{ ca_default_crlnumber }}	# the current crl number
					# must be commented out to leave a V1 CRL
crl		= {{ ca_default_crl }} 		# The current CRL
private_key	= {{ ca_default_private_key }}# The private key
RANDFILE	= {{ ca_default_RANDFILE }}	# private random number file

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt 	= {{ ca_default_name_opt }}		# Subject Name options
cert_opt 	= {{ ca_default_cert_opt }}		# Certificate field options

default_days	= {{ ca_default_default_days }}			# how long to certify for
default_crl_days= {{ ca_default_default_crl_days }}			# how long before next CRL
default_md	= {{ ca_default_default_md }}		# use SHA-256 by default
preserve	= {{ ca_default_preserve }}			# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy		= {{ ca_default_policy }}

# For the CA policy
[ {{ ca_policy_strict }} ]
countryName		= {{ ca_policy_strict_countryName }}
stateOrProvinceName	= {{ ca_policy_strict_stateOrProvinceName }}
organizationName	= {{ ca_policy_strict_organizationName }}
organizationalUnitName	= {{ ca_policy_strict_organizationalUnitName }}
commonName		= {{ ca_policy_strict_commonName }}
emailAddress		= {{ ca_policy_strict_emailAddress }}

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ ca_policy_loose ]
countryName		= {{ ca_policy_loose_countryName }}
stateOrProvinceName	= {{ ca_policy_loose_stateOrProvinceName }}
localityName		= {{ ca_policy_loose_localityName }}
organizationName	= {{ ca_policy_loose_organizationName }}
organizationalUnitName	= {{ ca_policy_loose_organizationalUnitName }}
commonName		= {{ ca_policy_loose_commonName }}
emailAddress		= {{ ca_policy_loose_emailAddress }}

####################################################################
[ req ]
default_bits		= {{ req_default_bits }}
default_md		= {{ req_default_md }}
distinguished_name	= {{ req_distinguished_name }}
x509_extensions	= {{ req_x509_extensions }}	# The extentions to add to the self signed cert

# Passwords for private keys if not present they will be prompted for
# input_password = secret
# output_password = secret

# This sets a mask for permitted string types. There are several options. 
# default: PrintableString, T61String, BMPString.
# pkix	 : PrintableString, BMPString (PKIX recommendation before 2004)
# utf8only: only UTF8Strings (PKIX recommendation after 2004).
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
# MASK:XXXX a literal mask value.
# WARNING: ancient versions of Netscape crash on BMPStrings or UTF8Strings.
string_mask = {{ req_string_mask }}

# req_extensions = v3_req # The extensions to add to a certificate request

[ req_distinguished_name ]
countryName			= {{ req_distinguished_name_countryName }}
countryName_default		= {{ req_distinguished_name_countryName_default }}
countryName_min			= {{ req_distinguished_name_countryName_min }}
countryName_max			= {{ req_distinguished_name_countryName_max }}

stateOrProvinceName		= {{ req_stateOrProvinceName }}
stateOrProvinceName_default	= {{ req_stateOrProvinceName_default }}

localityName			= {{ req_localityName }}
localityName_default		= {{ req_localityName_default }}

0.organizationName		= {{ req_0_organizationName }}
0.organizationName_default	= {{ req_0_organizationName_default }}

# we can do this but it is not needed normally :-)
#1.organizationName		= Second Organization Name (eg, company)
#1.organizationName_default	= World Wide Web Pty Ltd

organizationalUnitName		= {{ req_organizationalUnitName }}
#organizationalUnitName_default	=

commonName			= {{ req_commonName }}
commonName_max			= {{ req_commonName_max }}

emailAddress			= {{ req_emailAddress }}
emailAddress_max		= {{ req_emailAddress_max }}

# SET-ex3			= SET extension number 3

[ req_attributes ]
challengePassword		= {{ req_attributes_challengePassword }}
challengePassword_min		= {{ req_attributes_challengePassword_min }}
challengePassword_max		= {{ req_attributes_challengePassword_max }}

unstructuredName		= {{ req_attributes_unstructuredName }}

[ usr_cert ]

# These extensions are added when 'ca' signs a request.

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints={{ usr_cert_basicConstraints }}

# Here are some examples of the usage of nsCertType. If it is omitted
# the certificate can be used for anything *except* object signing.

# This is OK for an SSL server.
# nsCertType			= server

# For an object signing certificate this would be used.
# nsCertType = objsign

# For normal client use this is typical
nsCertType = {{ usr_cert_nsCertType }}

# and for everything including object signing:
# nsCertType = client, email, objsign

# This is typical in keyUsage for a client certificate.
keyUsage = {{ usr_cert_keyUsage }}

# This will be displayed in Netscape's comment listbox.
nsComment			= "{{ usr_cert_nsComment }}"

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier={{ usr_cert_subjectKeyIdentifier }}
authorityKeyIdentifier={{ usr_cert_authorityKeyIdentifier }}

# This stuff is for subjectAltName and issuerAltname.
# Import the email address.
# subjectAltName=email:copy
# An alternative to produce certificates that aren't
# deprecated according to PKIX.
# subjectAltName=email:move

# Copy subject details
# issuerAltName=issuer:copy

#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
#nsBaseUrl
#nsRevocationUrl
#nsRenewalUrl
#nsCaPolicyUrl
#nsSslServerName

# This is required for TSA certificates.
extendedKeyUsage = {{ usr_cert_extendedKeyUsage }}

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = {{ server_cert_basicConstraints }}
nsCertType = {{ server_cert_nsCertType }}
nsComment = "{{ server_cert_nsComment }}"
subjectKeyIdentifier = {{ server_cert_subjectKeyIdentifier }}
authorityKeyIdentifier = {{ server_cert_authorityKeyIdentifier }}
keyUsage = {{ server_cert_keyUsage }}
extendedKeyUsage = {{ server_cert_extendedKeyUsage }}

[ v3_req ]

# Extensions to add to a certificate request

basicConstraints = {{ v3_req_basicConstraints }}
keyUsage = {{ v3_req_keyUsage }}

[ v3_ca ]


# Extensions for a typical CA


# PKIX recommendation.

subjectKeyIdentifier={{ v3_ca_subjectKeyIdentifier }}

authorityKeyIdentifier={{ v3_ca_authorityKeyIdentifier }}

# This is what PKIX recommends but some broken software chokes on critical
# extensions.
#basicConstraints = critical,CA:true
# So we do this instead.
basicConstraints = {{ v3_ca_basicConstraints }}

# Key usage: this is typical for a CA certificate. However since it will
# prevent it being used as an test self-signed certificate it is best
# left out by default.
keyUsage = {{ v3_ca_keyUsage }}

# Some might want this also
# nsCertType = sslCA, emailCA

# Include email address in subject alt name: another PKIX recommendation
# subjectAltName=email:copy
# Copy issuer details
# issuerAltName=issuer:copy

# DER hex encoding of an extension: beware experts only!
# obj=DER:02:03
# Where 'obj' is a standard or added object
# You can even override a supported extension:
# basicConstraints= critical, DER:30:03:01:01:FF

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier = {{ v3_ca_subjectKeyIdentifier }}
authorityKeyIdentifier = {{ v3_ca_authorityKeyIdentifier }}
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ crl_ext ]

# CRL extensions.
# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# issuerAltName=issuer:copy
authorityKeyIdentifier={{ crl_ext_authorityKeyIdentifier }}

[ proxy_cert_ext ]
# These extensions should be added when creating a proxy certificate

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints={{ proxy_cert_ext_basicConstraints }}

# Here are some examples of the usage of nsCertType. If it is omitted
# the certificate can be used for anything *except* object signing.

# This is OK for an SSL server.
# nsCertType			= server

# For an object signing certificate this would be used.
# nsCertType = objsign

# For normal client use this is typical
# nsCertType = client, email

# and for everything including object signing:
# nsCertType = client, email, objsign

# This is typical in keyUsage for a client certificate.
# keyUsage = nonRepudiation, digitalSignature, keyEncipherment

# This will be displayed in Netscape's comment listbox.
nsComment			= "{{ proxy_cert_ext_nsComment }}"

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier={{ proxy_cert_ext_subjectKeyIdentifier }}
authorityKeyIdentifier={{ proxy_cert_ext_authorityKeyIdentifier }}

# This stuff is for subjectAltName and issuerAltname.
# Import the email address.
# subjectAltName=email:copy
# An alternative to produce certificates that aren't
# deprecated according to PKIX.
# subjectAltName=email:move

# Copy subject details
# issuerAltName=issuer:copy

#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
#nsBaseUrl
#nsRevocationUrl
#nsRenewalUrl
#nsCaPolicyUrl
#nsSslServerName

# This really needs to be in place for it to be a proxy certificate.
proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = {{ ocsp_basicConstraints }}
subjectKeyIdentifier = {{ ocsp_subjectKeyIdentifier }}
authorityKeyIdentifier = {{ ocsp_authorityKeyIdentifier }}
keyUsage = {{ ocsp_keyUsage }}
extendedKeyUsage = {{ ocsp_extendedKeyUsage }}

####################################################################
[ tsa ]

default_tsa = {{ tsa_default_tsa }}	# the default TSA section

[ {{ tsa_default_tsa }} ]

# These are used by the TSA reply generation only.
dir		= {{ tsa_config1_config1_dir }}		# TSA root directory
serial		= {{ tsa_config1_serial }}	# The current serial number (mandatory)
crypto_device	= {{ tsa_config1_crypto_device }}		# OpenSSL engine to use for signing
signer_cert	= {{ tsa_config1_signer_cert }} 	# The TSA signing certificate
					# (optional)
certs		= {{ tsa_config1_certs }}	# Certificate chain to include in reply
					# (optional)
signer_key	= {{ tsa_config1_signer_key }} # The TSA private key (optional)

default_policy	= {{ tsa_config1_default_policy }}		# Policy if request did not specify it
					# (optional)
other_policies	= {{ tsa_config1_other_policies }}	# acceptable policies (optional)
digests		= {{ tsa_config1_digests }}	# Acceptable message digests (mandatory)
accuracy	= {{ tsa_config1_accuracy }}	# (optional)
clock_precision_digits  = {{ tsa_config1_clock_precision_digits }}	# number of digits after dot. (optional)
ordering		= {{ tsa_config1_ordering }}	# Is ordering defined for timestamps?
				# (optional, default: no)
tsa_name		= {{ tsa_config1_tsa_name }}	# Must the TSA name be included in the reply?
				# (optional, default: no)
ess_cert_id_chain	= {{ tsa_config1_ess_cert_id_chain }}	# Must the ESS cert id chain be included?
				# (optional, default: no)